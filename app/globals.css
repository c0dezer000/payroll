@import "tailwindcss";

:root {
  --background: #ffffff;
}

html.dark {
  --background: #0b1220; /* slate-950-ish */
}

/* Tailwind v4 theming via CSS variables; no @theme at-rule to keep PostCSS simple */

/* Base body background follows CSS variable so both themes work */
body {
  background: var(--background);
}

/* Theme text variables to provide accessible contrast across components */
:root {
  --text: #0f172a; /* slate-900 */
  --muted: #475569; /* slate-600 */
}

html.dark {
  --text: #e6eef8; /* slate-200 */
  --muted: #94a3b8; /* slate-400 */
}

/* Apply text color by default so elements without explicit text classes are readable */
body {
  color: var(--text);
}

/* Make form fields and common interactive elements visually follow the theme surface
   while keeping text readable. Using non-!important here so component classes can
   override if needed. */
input, select, textarea, button {
  background-color: var(--surface);
  color: var(--text);
  border-color: var(--surface-border);
}

input::placeholder, textarea::placeholder {
  color: var(--muted);
}

/* Ensure icons and SVGs inside controls inherit readable color when no explicit class */
input svg, select svg, button svg {
  color: inherit;
}

/* Make `text-white` safe in light mode: map to theme text color, but keep white in dark mode */
.text-white {
  color: var(--text) !important;
}
html.dark .text-white {
  color: #ffffff !important;
}

/* Surface variables for cards/containers */
:root {
  --surface: #ffffff;
  --surface-border: #e6eef8; /* light border */
}

html.dark {
  --surface: #0b1220; /* match dark background for uniform look */
  --surface-border: #1f2937;
}

/* Normalize common Tailwind background utilities to use surface variables
   This forces card/container classes like `bg-white` or `dark:bg-slate-800`
   to follow the theme's surface color without refactoring every component. */
.bg-white, .bg-slate-50, .bg-slate-100, .bg-gray-50, .bg-gray-100, .bg-slate-50\/20, .bg-white\/20, .bg-white\/30, .bg-slate-100\/20 {
  background-color: var(--surface) !important;
}

/* Dark-mode specific compiled utilities are represented as selectors under html.dark
   so ensure they also map to the surface variable. */
html.dark .bg-white,
html.dark .bg-slate-50,
html.dark .bg-slate-100,
html.dark .bg-slate-800,
html.dark .bg-slate-700,
html.dark .bg-slate-900,
html.dark .bg-gray-50,
html.dark .bg-gray-100 {
  background-color: var(--surface) !important;
}

/* Normalize border utilities used on cards */
.border-slate-200 {
  border-color: var(--surface-border) !important;
}
html.dark .border-slate-200,
html.dark .border-slate-700 {
  border-color: var(--surface-border) !important;
}

/* Improve form and focus defaults slightly */
* {
  outline-color: #64748b; /* slate-500 */
}
